//To Apply Style to only IE8 @include for_ie8 {}
@mixin for_ie8 {
  .ie8 {
    @content;
  }
}

//To Apply Style to only IE8 @include for_ie9 {}
@mixin for_ie9 {
  .ie9 {
    @content;
  }
}

//To Apply Style to only IE8 @include for_ie9 {}
@mixin for_lt-ie10 {
  .lt-ie10 {
    @content;
  }
}

//if display:box == true
@mixin is_display_box($box_pack_value: false) {
  @if $box_layout {
    @include display-box;
    @if $box_pack_value {
      @include box-pack($box_pack_value);
    }
  } @else {
    @content;
  }
}

@mixin define_column_grid($outer_dom_size) {
  $base_grid: ($outer_dom_size - $grid_height * ($column_num - 1))/ $column_num;

  @for $i from 1 through $column_num {
    %separatedNum-#{$i} {
      @extend %box-sizing;

      @if $box_layout == false {
        float: left;
      }
      width: cp($base_grid * $i + $grid_height * ($i - 1), $outer_dom_size);

      @if $i == $column_num {
        // margin-right: $grid_margin;
      } @else {
        margin-left: addUnit($grid_height);
      }
    }
  }
}

@mixin column-grid($num, $first: false) {
  @extend %separatedNum-#{$num};
  @if $first {
    margin-left: 0;
  }
}

@mixin easy-clearfix {
  overflow: hidden;
  zoom: 1;
}

@mixin sticky-footer($wrapper, $push, $footer-height){
  html, body {
    height: 100%;
  }

  .#{$wrapper} {
    min-height: 100%;
    margin-bottom: 0 - $footer-height + 0px;
  }

  .#{$push} {
    height: $footer_height +0px;
    clear :both;
  }
}

//for iOS Font-Antialias
@mixin font_weight($weight, $antialiased: true) {
  @if $font_smoothing == true {
    @if $antialiased == true {
      font-weight: $weight;
      -webkit-font-smoothing: antialiased;
    } @else {
      font-weight: $weight;
    }
  } @else {
    font-weight: $weight;
  }
}

//heading typography
@mixin headingDesign($weight, $size, $grid_height_num, $font_color: 'inherit', $margin: 'inherit') {
  @if $weight == $default_fw_bold {
    @extend %bold;
  } @else {
    font-weight: $weight;
  }
  margin: $margin;
  line-height: $grid_height_num * ceil($grid_height / $size * 100) / 100;
  font-size: px-to-rem($size);
  color: $font_color;
}

//anchor
@mixin link_decoration {
  @if $link_decoration {
    text-decoration: underline;
    &:hover{
      text-decoration: none;
      @content;
    }
  } @else {
    text-decoration: none;
    &:hover{
      text-decoration: underline;
      @content;
    }
  }
}

//wrapping Long Text and URLs
@mixin force-wrap {
  white-space: pre;
  // CSS 2.0
  white-space: pre-wrap;
  // CSS 2.1
  white-space: pre-line;
  // CSS 3.0
  white-space: -pre-wrap;
  // Opera 4-6
  white-space: -o-pre-wrap;
  // Opera 7
  white-space: -moz-pre-wrap;
  // Mozilla
  white-space: -hp-pre-wrap;
  // HP Printers
  word-wrap: break-word;
}

@mixin body_background {
  background: #{$body_background_color} $body_background_image_file #{$body_background_repeat} #{$body_background_offset};
}

//table design
//override compass outer-table-borders mixin
@mixin outer-table-borders($width: 2px, $color: black, $verticalLine: false) {
  border: $width solid $color;
  @if $verticalLine == false {
    border-right-width: 0;
    border-left-width: 0;

    tfoot tr {
      &:first-child {
        th,td {
          border-top-width: 1px;
        }
      }

      th,td {
        border-top-width: 0;
        border-bottom-width: 0;
      }
    }
  }
  thead {
    th {
      background: $theadColor;
      border-bottom: $width solid $color;
    }
  }
  tfoot {
    th, td { border-top: $width solid $color; }
  }
  th {
    &:first-child {
      border-right: $width solid $color;
    }
  }

  tfoot th {
    text-align: left;
  }
}

//override compass inner-table-borders mixin
@mixin inner-table-borders($width: 2px, $color: black, $verticalLine: false) {
  th, td {
    border: {
      @if $verticalLine {
        right: $width solid $color;
      } @else {
        right-width: 0;
      }
      bottom: $width dashed $color;
      left-width: 0;
      top-width: 0;
    };

    text-align: center;

    &:last-child,
    &.last {
      @if $verticalLine {
        border-right-width: 0;
      }
    }
  }
  // IE8 ignores rules that are included on the same line as :last-child
  // see http://www.richardscarrott.co.uk/posts/view/ie8-last-child-bug for details
  tbody, tfoot {
    tr:last-child {
      th, td {
        border-bottom-width: 0; } }
    tr.last {
      th, td {
        border-bottom-width: 0
      }
    }
  }
}

@mixin stripedTable {
  tr {
    @if $striped {
      &:nth-child(even) {
        th{
          background: $thEven;
        }
        td {
          background: $trEven;
        }
      }
    }
  }
  @content;
}

@mixin default_table {
  @include outer-table-borders($outer-bw, $outer-bc, $outer-verticalLine);
  @include inner-table-borders($inner-bw, $inner-bc, $inner-verticalLine);
  @include stripedTable;
}

@mixin disabled {
  opacity: $disabledOpacity;
}

//btndesign
@mixin border($width: 2px, $design: solid, $btncolor: inherit) {
  border: $width $design darken($btncolor, $darken_amount);
}

//gradation
@mixin gradient-top-lighten($color:#666, $lighten:10%) {
  background-color: $color;
  @include background-image(linear-gradient(lighten($color, $lighten) 0%, $color 100%));
}

//compass filter mixin
$experimental-support-for-webkit: true;
$experimental-support-for-mozilla: true;

@mixin experimental($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {
  @if $webkit and $experimental-support-for-webkit {
    -webkit-#{$property}: $value; }
  @if $khtml and $experimental-support-for-khtml {
    -khtml-#{$property}: $value; }
  @if $moz and $experimental-support-for-mozilla {
    -moz-#{$property}: $value; }
  @if $ms and $experimental-support-for-microsoft {
    -ms-#{$property}: $value; }
  @if $o and $experimental-support-for-opera {
    -o-#{$property}: $value; }
  @if $official {
    #{$property}: $value; }
}

@mixin filter($filter-1, $filter-2: false, $filter-3: false, $filter-4: false, $filter-5: false, $filter-6: false, $filter-7: false, $filter-8: false, $filter-9: false, $filter-10: false) {
  $filter: compact($filter-1, $filter-2, $filter-3, $filter-4, $filter-5, $filter-6, $filter-7, $filter-8, $filter-9, $filter-10);
  @include experimental(filter, $filter, -moz, -webkit, not -o, not -ms, not -khtml, official); }
